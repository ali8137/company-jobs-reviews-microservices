#this file is for running the microservice "job" in our local machine

spring.application.name=jobms

companyms.url=http://localhost:8081
jobms.url=http://localhost:8082
reviewms.url=http://localhost:8083

server.port=8082

# PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5433/job
spring.datasource.username=
spring.datasource.password=
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# zipkin
management.tracing.sampling.probability=1.0
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# config server
#spring.config.import=configserver:http://localhost:8080
spring.config.import=optional:configserver:http://localhost:8080
#spring.profiles.active=dev


# resilience4j
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based
# retry mechanism of circuitBreaker:
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s
# rate limiting mechanism of circuitBreaker:
resilience4j.circuitbreaker.instances.companyBreaker.timeout-duration= 0
resilience4j.circuitbreaker.instances.companyBreaker.limit-refresh-period= 4
resilience4j.circuitbreaker.instances.companyBreaker.limit-for-period= 2


# actuator for resilience4j:
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
